version: 2

references:

# Using 2 base images for terraform / ansible

base_image: &base_image
  hashicorp/terraform:light

base_image_ans: &base_image_ans
  vitalyu/az-ansible

# Define the working directory from inside the container

working_directory: &working_directory
  ~/example

# Default configuration for both environments

default_config_ans: &default_config_ans
  docker:
    - image: *base_image_ans
  working_directory_ans: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

# Step to restore repository from cache 

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

# Setup the folder for deployments

set_repo_folder_init: &set_repo_folder_init
  run:
    name: set repo folder init
    command: |
      cd && touch $BASH_ENV
      echo 'export TERRAFORM_ENVIRONMENT=init' >> $BASH_ENV

set_repo_folder_infrastructure: &set_repo_folder_infrastructure
  run:
    name: set repo folder infrastructure
    command: |
      cd && touch $BASH_ENV
      echo 'export TERRAFORM_ENVIRONMENT=infrastructure' >> $BASH_ENV

set_repo_folder_configuration: &set_repo_folder_configuration
  run:
    name: set repo folder configuration
    command: |
      cd && touch $BASH_ENV
      echo 'export TERRAFORM_ENVIRONMENT=configuration' >> $BASH_ENV
      pwd

# Terraform initialization cmd module
      
terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      source $BASH_ENV
      cd steps/$TERRAFORM_ENVIRONMENT
      ls -l
      terraform init

terraform_init_infrastructure: &terraform_init_infrastructure
  run:
    name: terraform init infrastructure
    command: |
      # source $BASH_ENV
      cd steps/infrastructure
      ls -l
      terraform init

# Apply terraform from specific plan module

apply_job: &apply_job
  <<: *default_config
  steps:
    - *restore_repo
    - *set_repo_folder_init
    - *terraform_init
    - attach_workspace:
        at: *working_directory
    - run:
        name: terraform apply
        command: |
          source $BASH_ENV
          cd steps/$TERRAFORM_ENVIRONMENT
          terraform apply --auto-approve ../../terraform.plan

jobs:

  build:
    <<: *default_config
    steps:
      - checkout
      - *set_repo_folder_init
      - run:
          name: terraform fmt
          command: |
            source $BASH_ENV
            cd steps/$TERRAFORM_ENVIRONMENT
      - *save_repo

  plan:
    <<: *default_config
    steps:
      - *restore_repo
      - *set_repo_folder_init
      - *terraform_init
      - run:
          name: terraform plan
          command: |
            source $BASH_ENV
            cd steps/$TERRAFORM_ENVIRONMENT
            terraform plan -out=../../terraform.plan
      - persist_to_workspace:
          root: *working_directory
          paths:
            - terraform.plan

  apply:
    <<: *apply_job
  apply-with-approval:
    <<: *apply_job

  build_infrastructure:
    <<: *default_config
    steps:
      - checkout
      - *set_repo_folder_infrastructure
      - run:
          name: terraform fmt
          command: |
            source $BASH_ENV
            cd steps/$TERRAFORM_ENVIRONMENT
      - *save_repo

  plan_infrastructure:
    <<: *default_config
    steps:
      - *restore_repo
      - *set_repo_folder_infrastructure
      - *terraform_init_infrastructure
      - run:
          name: terraform plan
          command: |
            source $BASH_ENV
            cd steps/$TERRAFORM_ENVIRONMENT
            terraform plan -out=../../terraform.plan
      - persist_to_workspace:
          root: *working_directory
          paths:
            - terraform.plan
  
  build_configuration:
    <<: *default_config_ans
    ANSIBLE_HOST_KEY_CHECKING: no
    steps:
      - checkout
      - *set_repo_folder_configuration
      - add_ssh_keys:
          fingerprints:
            - "cd:bb:74:9e:3a:66:89:b9:3a:9f:5e:09:df:c4:2a:15"
      - run:
          name: configuration ansible
          command: |
            source $BASH_ENV
            cd steps/configuration
            ansible --version
            export ANSIBLE_HOST_KEY_CHECKING=False
            ansible-playbook -i hosts.ini main.yml 

      - *save_repo
  
  apply_infrastructure:
    <<: *apply_job
  apply-with-approval_infrastructure:
    <<: *apply_job

workflows:
  version: 2
  build_plan_approve_apply:
    jobs:
      # - build
      # - plan:
      #     requires:
      #       - build
      # - apply-with-approval:
      #     requires:
      #       - plan
      #     filters:
      #       branches:
      #         only: master
      - build_infrastructure:
          requires:
            # - apply-with-approval
      - plan_infrastructure:
          requires:
            - build_infrastructure
      - apply-with-approval_infrastructure:
          requires:
              - plan_infrastructure
          filters:
            branches:
              only: master
      - build_configuration:
          requires:
            - apply-with-approval_infrastructure